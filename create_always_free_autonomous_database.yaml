---
#
# Oracle Linux Automation Manager
#
# Copyright (c) 2022 Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at
# https://oss.oracle.com/licenses/upl.
#
# Description: Playbook to create an always free autonomous database OL within OCI
#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# This playbook uses the following additional variables which should be configured at run time for the template, these are examples values used
# in the lab:
# rescue_test: false
# display name: OLAM-ADB
# admin_password: BEstr0ng_#11
# instance_compartment: ocid1.compartment.oc1..aaaaaaaazxd6wrvcuicrgbi6cbaob4pyrr3i7i33xudheqhx6pbcesobdazq
# db_name: OLAM-DB

- name: OCI Autonomous Database 
  hosts: localhost
  collections:
    - oracle.oci
  connection: local
  vars:
    # the following settings are inherent to Always Free ADBs and cannot be scaled
    data_storage_size_in_tbs: 1  # always free ADB will have 0.02 TB (20 GB) of storage but API requires value of >= 1 TB
    cpu_core_count: 1

  tasks:
    - block:
        - name: Create a new Always Free Autonomous Database
          oci_database_autonomous_database:
              compartment_id: "{{ compartment_ocid }}"
              cpu_core_count: "{{ cpu_core_count }}"
              display_name: "{{ display_name }}"
              admin_password: "{{ admin_password }}"
              db_name: "{{ db_name }}"
              data_storage_size_in_tbs: "{{ data_storage_size_in_tbs }}"
              is_free_tier: true
              state: 'present'
          register: result

        - set_fact:
             autonomous_database_id: "{{ result.autonomous_database.id }}"

        - assert:
            that:
              - result.autonomous_database.lifecycle_state == "AVAILABLE"

        - name: List All Autonomous Databases in our compartment, filtered by Display Name
          oci_database_autonomous_database_facts:
             compartment_id: "{{ compartment_ocid }}"
             display_name: '{{ display_name }}'
          register: result

        - name: Assert that specified Autonomous Database is listed
          assert:
             that:
                - result.autonomous_databases[0].display_name == display_name
                

        - name: Get our Autonomous Database's facts
          oci_database_autonomous_database_facts:
             autonomous_database_id: "{{ autonomous_database_id }}"
          register: result
        - debug: # print facts retrieved about the Autonomous Database
              msg: "{{result}}"
        - name: Assert that specified Autonomous Database is listed
          assert:
             that:
                - result.autonomous_databases[0].display_name == display_name
                
        - name: Fail task when variable rescue_test is set to true (for testing the rescue section)
          fail:
            msg: "Rescue debug is enabled, we will fail to test the rescue steps"
          when: "( rescue_test )"


      rescue:

        # Delete Autonomous Database
        - name: Delete Autonomous Database
          oci_database_autonomous_database:
             autonomous_database_id: "{{ autonomous_database_id }}"
             state: 'absent'
          register: result

        - name: Assert that specified Autonomous Database is deleted
          assert:
                that:
                   - result.changed == True
                   - result.autonomous_database.display_name == display_name

        - fail:
            msg: "The sample execution failed."
