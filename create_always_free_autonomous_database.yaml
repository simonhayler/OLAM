---
- name: Autonomous Database usage example
  hosts: localhost
  collections:
    - oracle.oci
  connection: local
  vars:
    display_name: "always_free_adb"
    db_name: "alwaysfreeadb" # (Maximum 14 alphanumeric characters)
   
    # the following settings are inherent to Always Free ADBs and cannot be scaled
    data_storage_size_in_tbs: 1  # always free ADB will have 0.02 TB (20 GB) of storage but API requires value of >= 1 TB
    cpu_core_count: 1

    #########################################
    # *Note* - Override the following variables based on your tenancy
    # or set a valid value for the corresponding environment variable
    # Please refer to module documentation for sample values for
    # variables
    #########################################
    compartment_ocid: "ocid1.compartment.oc1..aaaaaaaazxd6wrvcuicrgbi6cbaob4pyrr3i7i33xudheqhx6pbcesobdazq"
    admin_password: "BEstr0ng_#11" # sample value, admin_password: 'BEstr0ng_#11'

  tasks:
    - block:
        - name: Create a new Always Free Autonomous Database
          oci_database_autonomous_database:
              compartment_id: "{{ compartment_ocid }}"
              cpu_core_count: "{{ cpu_core_count }}"
              display_name: "{{ display_name }}"
              admin_password: "{{ admin_password }}"
              db_name: "{{ db_name }}"
              data_storage_size_in_tbs: "{{ data_storage_size_in_tbs }}"
              is_free_tier: true
              state: 'present'
          register: result

        - set_fact:
             autonomous_database_id: "{{ result.autonomous_database.id }}"

        - assert:
            that:
              - result.autonomous_database.lifecycle_state == "AVAILABLE"

    # List Autonomous Databases filtered by Display Name
        - name: List All Autonomous Databases in a compartment, filtered by Display Name
          oci_database_autonomous_database_facts:
             compartment_id: "{{ compartment_ocid }}"
             display_name: '{{ display_name }}'
          register: result

        - name: Assert that specified Autonomous Database is listed
          assert:
             that:
                - result.autonomous_databases[0].display_name == display_name

    # Stop Autonomous Databases
        - name: Stop an Autonomous Database
          oci_database_autonomous_database_actions:
             autonomous_database_id: "{{ autonomous_database_id }}"
             action: 'stop'
          register: result

        - name: Assert that specified Autonomous Database is stopped
          assert:
             that:
                - result.autonomous_database.lifecycle_state == 'STOPPED'

    # Start Autonomous Databases
        - name: Start Autonomous Database
          oci_database_autonomous_database_actions:
             autonomous_database_id: "{{ autonomous_database_id }}"
             action: 'start'
          register: result

        - name: Assert that specified Autonomous Database is started and available
          assert:
             that:
                - result.autonomous_database.lifecycle_state == 'AVAILABLE'

    # Get a specific Autonomous Database
        - name: Get a specific Autonomous Database's facts
          oci_database_autonomous_database_facts:
             autonomous_database_id: "{{ autonomous_database_id }}"
          register: result
        - debug: # print facts retrieved about the Autonomous Database
              msg: "{{result}}"
        - name: Assert that specified Autonomous Database is listed
          assert:
             that:
                - result.autonomous_databases[0].display_name == display_name


      rescue:

        # Delete Autonomous Database
        - name: Delete Autonomous Database
        oci_database_autonomous_database:
           autonomous_database_id: "{{ autonomous_database_id }}"
           state: 'absent'
        register: result

        - name: Assert that specified Autonomous Database is deleted
        assert:
               that:
                  - result.changed == True
                  - result.autonomous_database.display_name == display_name

        - fail:
            msg: "The sample execution failed."
