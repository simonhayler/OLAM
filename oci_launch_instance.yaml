#
# Oracle Linux Automation Manager
#
# Copyright (c) 2022 Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at
# https://oss.oracle.com/licenses/upl.
#
# Description: Playbook create a BTRFS snapshot then dnf update
#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
---

- name: Launch a compute instance from OCI
  hosts: localhost
  collections:
    - oracle.oci
  vars:
    # common networking definitions
    quad_zero_route: "0.0.0.0/0"
    TCP_protocol: "6"
    SSH_port: "22"
    vcn_name: "OLAM-sample-launch-compute-instance-vcn"
    vcn_cidr_block: "10.0.0.0/16"
    vcn_dns_label: "samplelcs"
    ig_name: "OLAMinternetgatewayformytestvcn"
    route_table_name: "OLAMroutetable"
    # route all internet access to our Internet Gateway
    route_table_rules:
      cidr_block: "{{ quad_zero_route }}"
      network_entity_id: "{{ ig_id }}"
      subnet_cidr: "10.0.0.48/28"
      subnet_name: "OLAMtestsubnet"
      subnet_dns_label: "OLAMtestsubnet"
      securitylist_name: "OLAMsecuritylist"
      instance_shape: "{{ lookup('env', 'SAMPLE_INSTANCE_SHAPE')\
      | default('VM.Standard2.1', true) }}"
      instance_hostname: "mytestinstance"
      instance_ad: "ergw:US-ASHBURN-AD-1"
      instance_compartment: "\
      ocid1.compartment.oc1..aaaaaaaazxd6wrvcuicrgbi6cbaob4pyrr3i7i33xudheqhx6pbcesobdazq"
    # provide an "OL" image
    # find OL image ocids per region here: 
    # https://docs.cloud.oracle.com/iaas/images/image/501c6e22-4dc6-4e99-b045-cae47aae343f/
    instance_image: "ocid1.image.oc1.iad.aaaaaaaanxbmz7rm7tkopukbbahtcbcx45v5omusafwhjaenzf7tkcoq56qa"
  tasks:
    - name: Run setup.yaml to configure the OCI environment
    - block:
      - import_tasks: setup.yaml
      - set_fact:
        SSH_AUTHORIZED_KEYS: "{{ lookup('file', './ssh/oci_id_rsa.pub') }}"
    - name: Launch an instance
      oci_compute_instance:
        availability_domain: "{{ instance_ad }}"
        compartment_id: "{{ instance_compartment }}"
        name: "my_OLAM_test_instance"
        image_id: "{{ instance_image }}"
        shape: "{{ instance_shape }}"
      create_vnic_details:
        assign_public_ip: True
        hostname_label: "{{ instance_hostname }}"
        subnet_id: "{{ instance_subnet_id }}"
      metadata:
        ssh_authorized_keys: "{{ SSH_AUTHORIZED_KEYS }}"
      register: result

    - name: Print instance details
      debug:
        msg: "Launched a new instance {{ result }}"
    - set_fact:
      instance_id: "{{result.instance.id }}"
           
    - name: Get the VNIC attachment details of instance
      oci_compute_vnic_attachment_facts:
        compartment_id: "{{ instance_compartment }}"
        instance_id: "{{ instance_id }}"
      register: result
      
    - name: Get details of the VNIC
      oci_network_vnic_facts:
        id: "{{ result.vnic_attachments[0].vnic_id }}"
      register: result
    - set_fact:
      instance_public_ip: "{{result.vnic.public_ip}}"

    - name: Print the public ip of the newly launched instance
      debug:
        msg: "Public IP of launched instance {{ instance_public_ip }}"
 
    - name: Print how to access the instance
      debug:
        msg: "SSH into instance {{ instance_public_ip }} using your private key which matches the public one referenced by the playbook"
    - rescue:
        - import_tasks: teardown.yaml
